---
- name: Create a namespace
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item.name }}"
        labels:
          inCharge: "{{ in_charge }}"
          crdTeam: "{{ ansible_operator_meta.name }}"
  loop: "{{ environments }}"

- name: Create a resource quota
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ResourceQuota
      metadata:
        namespace: "{{ item.name }}"
        name: resource-quota
      spec:
        hard:
          limits.cpu: "{{item.resources.limits.cpu}}"
          limits.memory: "{{item.resources.limits.memory}}"
          requests.cpu: "{{item.resources.requests.cpu}}"
          requests.memory: "{{item.resources.requests.memory}}"
          pods: "{{item.max_pods | default(defaults.maxPods)}}"
          services: "{{item.max_services | default(defaults.maxServices)}}"
          services.loadbalancers: >-
            {{item.max_services_loadbalancers |
            default(defaults.maxServicesLoadbalancers)}}
          services.nodeports: >-
            {{item.max_services_nodeports |
            default(defaults.maxServicesNodeports)}}
  loop: "{{ environments }}"

- name: Create a limit range
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: LimitRange
      metadata:
        namespace: "{{ item.name }}"
        name: limit-range
      spec:
        limits:
          - default:
              cpu: >-
                {{(((item.pod_resources|default(dict())).limits|default(dict())).default|default(dict())).cpu |
                default(defaults.podResources.limits.default.cpu)}}
              memory: >-
                {{(((item.pod_resources|default(dict())).limits|default(dict())).default|default(dict())).memory |
                default(defaults.podResources.limits.default.memory)}}
            defaultRequest:
              cpu: >-
                {{(((item.pod_resources|default(dict())).requests|default(dict())).default|default(dict())).cpu |
                default(defaults.podResources.requests.default.cpu)}}
              memory: >-
                {{(((item.pod_resources|default(dict())).requests|default(dict())).default|default(dict())).memory |
                default(defaults.podResources.requests.default.memory)}}
            max:
              cpu: >-
                {{(((item.pod_resources|default(dict())).limits|default(dict())).max|default(dict())).cpu |
                default(defaults.podResources.limits.max.cpu)}}
              memory: >-
                {{(((item.pod_resources|default(dict())).limits|default(dict())).max|default(dict())).memory |
                default(defaults.podResources.limits.max.memory)}}
            min:
              cpu: >-
                {{(((item.pod_resources|default(dict())).requests|default(dict())).min|default(dict())).cpu |
                default(defaults.podResources.requests.min.cpu)}}
              memory: >-
                {{(((item.pod_resources|default(dict())).requests|default(dict())).min|default(dict())).memory |
                default(defaults.podResources.requests.min.memory)}}
            maxLimitRequestRatio:
              cpu: >-
                {{((item.pod_resources|default(dict())).max_limit_request_ratio|default(dict())).cpu |
                default(defaults.podResources.maxLimitRequestRatio.cpu)}}
              memory: >-
                {{((item.pod_resources|default(dict())).max_limit_request_ratio|default(dict())).memory |
                default(defaults.podResources.maxLimitRequestRatio.memory)}}
            type: Container
  loop: "{{ environments }}"

- name: Create a deploy service account
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: deploy
        namespace: "{{ item.name }}"
  loop: "{{ environments }}"

- name: Create an edit role building
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: edit
        namespace: "{{ item.name }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: edit
      subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: Group
          name: "{{ ansible_operator_meta.name }}:edit"
        - kind: ServiceAccount
          name: deploy
          namespace: "{{ item.name }}"
  loop: "{{ environments }}"

- name: Create a view role building
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: view
        namespace: "{{ item.name }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view
      subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: Group
          name: "{{ ansible_operator_meta.name }}:view"
  loop: "{{ environments }}"
